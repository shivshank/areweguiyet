{"WebRender":{"crates_io":"https://crates.io/crates/WebRender","repo":"https://github.com/servo/webrender","description":"A GPU accelerated 2D renderer for web content","docs":"https://doc.servo.org/webrender/index.html","tags":["webrender"]},"relm":{"crates_io":"https://crates.io/crates/relm","repo":"https://github.com/antoyo/relm","description":"Asynchronous, GTK+-based, GUI library, inspired by Elm, written in Rust","docs":"https://docs.rs/relm/","tags":["Bindings","GTK"]},"Conrod":{"crates_io":"https://crates.io/crates/Conrod","repo":"https://github.com/pistondevelopers/conrod.git","description":"An easy-to-use, 100% Rust, extensible 2D GUI library.","docs":"http://docs.piston.rs/conrod/conrod/","tags":["Immediate mode API"]},"Azul":{"crates_io":"https://crates.io/crates/Azul","repo":"https://github.com/maps4print/azul","description":"    Azul GUI is a free, functional, MVVM-oriented GUI framework\n    for rapid development of desktop applications written in Rust,\n    supported by the Mozilla WebRender rendering engine\n","docs":"https://docs.rs/azul","tags":["webrender"]},"GTK":{"crates_io":"https://crates.io/crates/GTK","repo":"https://github.com/gtk-rs/gtk","description":"Rust bindings and wrappers for GLib, GDK 3, GTK+ 3 and Cairo.","docs":"https://gtk-rs.org/docs-src/","tags":["Bindings","GTK"]},"OrbTk":{"crates_io":"https://crates.io/crates/OrbTk","repo":"https://github.com/redox-os/orbtk","description":"The Orbital Widget Toolkit is a multi platform (G)UI toolkit for building scalable user interfaces with the programming language Rust. It's based on the Entity Component System Pattern and provides a functional-reactive API.","docs":"https://docs.rs/orbtk","tags":["webrender"]},"qmetaobject":{"crates_io":"https://crates.io/crates/qmetaobject","repo":"https://github.com/woboq/qmetaobject-rs","description":"Expose rust object to Qt and QML.","docs":null,"tags":["Bindings","Qt","QML"]},"druid":{"crates_io":"https://crates.io/crates/druid","repo":"https://github.com/xi-editor/druid","description":"Druid is a new Rust-native UI toolkit, still in early stages. Its main goal is performance, also aiming for small binary size and compile time, fast startup, and very easy build configuration (just cargo run). It is currently Windows-only, but with hope for porting.","docs":null,"tags":[]},"rust-qt-binding-generator":{"crates_io":"https://crates.io/crates/rust-qt-binding-generator","repo":"https://anongit.kde.org/rust-qt-binding-generator","description":"Generate code to build Qt applications with Rust","docs":"https://phabricator.kde.org/source/rust-qt-binding-generator/","tags":["Bindings","Qt","QML"]}}